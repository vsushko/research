<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- форма аутентификация добавляется сама -->
    <security:http auto-config="true">

        <!-- добавляем функцию "запомнить меня" -->
        <!-- по умолчанию секретный ключ имеет значение SpringSecured-->
        <security:remember-me key="spitterKey" token-validity-seconds="2419200"/>

        <!-- auto config true: -->
        <security:form-login/>
        <security:http-basic/>
        <security:logout/>
        <!-- requires-channel="https" - требование использовать https протокол -->
        <security:intercept-url pattern="/**" access="ROLE_SPITTER" requires-channel="https"/>
    </security:http>

    <!-- добавим свою форму аутентификации -->
    <!--<security:http auto-config="true" use-expressions="false">
        <security:form-login login-processing-url="/static/j_spring_security_check"
                             login-page="/login"
                             authentication-failure-url="/login?login_error=t"/>
    </security:http>-->

    <!-- с использованием SpEL -->
    <!--<security:http auto-config="true" use-expressions="true">
    <security:form-login login-processing-url="/static/j_spring_security_check"
                         login-page="/login"
                         authentication-failure-url="/login?login_error=t"/>
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN)"/>
        &lt;!&ndash; ограничение не толькопо роли, но и по IP &ndash;&gt;
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN') and hasIpAddress('192.168.1.2')"/>
    </security:http>-->

    <!-- настройка репозитория в памяти -->
    <security:user-service id="userDetailsService">
        <security:user name="habuma" authorities="ROLE_SPITTER" password="123"/>
        <security:user name="twoqubed" authorities="ROLE_SPITTER" password="123"/>
        <security:user name="admin" authorities="ROLE_ADMIN, ROLE_SPITTER" password="123"/>
    </security:user-service>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService"/>
    </security:authentication-manager>

    <!-- если ldap server выполняется на удаленной машине -->
    <security:ldap-server url="ldap://habuma.com:389/dc=habuma, dc=com"/>

    <!-- настройка встроенного сервера, загружает данные в формате LDIF -->
    <security:ldap-server root="dc=habuma,dc=com"/>

    <!-- указываем явно, какой файл LDIF следует загрузить -->
    <security:ldap-server root="dc=habuma, dc=com" ldif="classpath:users.ldif"/>

    <!-- защита методов отмеченные аннотацией @Secured -->
    <!-- включение поддержки аннотации из стандарта JSR-250 - @RolesAllowed-->
    <!-- можно использовать вместе -->
    <security:global-method-security secured-annotations="enabled"/>
    <security:global-method-security jsr250-annotations="enabled"/>

    <!-- включаем защиту с применением языка SpEL до и после вызова-->
    <security:global-method-security pre-post-annotations="enabled"/>

    <!-- сообщаем, что переопределили PermissionEvaluator -->
    <bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator">
            <bean class="ru.vsprog.springinaction.chapter10.SpittlePermissionEvaluator"/>
        </property>
    </bean>

    <!-- указываем обработчик выражений -->
    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler"/>
    </security:global-method-security>

    <!-- объявление точек внедрения для защиты методов -->
    <!-- будут применяться одни и те же ограничения к определенным методам -->
    <security:global-method-security>
        <security:protect-pointcut
                expression="execution(@ru.vsprog.springinaction.chapter10.Sensitive * *.*String))"
                access="ROLE_SPITTER"/>
    </security:global-method-security>

</beans>